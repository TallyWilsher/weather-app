{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/weather.service\";\nimport * as i3 from \"@angular/common\";\nfunction WeatherComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", state_r1.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", state_r1.viewValue, \" \");\n  }\n}\nfunction WeatherComponent_div_16_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"div\", 18);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const df_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(df_r2.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(df_r2.detailedForecast);\n  }\n}\nfunction WeatherComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"div\", 11)(3, \"h2\");\n    i0.ɵɵtext(4, \"State:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"h2\");\n    i0.ɵɵtext(9, \"Location:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 13);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 14);\n    i0.ɵɵtemplate(14, WeatherComponent_div_16_div_14_Template, 7, 2, \"div\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.stateInfo.state);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.stateInfo.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.dailyForecast);\n  }\n}\nexport let WeatherComponent = /*#__PURE__*/(() => {\n  class WeatherComponent {\n    constructor(fb, weatherService) {\n      this.fb = fb;\n      this.weatherService = weatherService;\n      this.stateInfo = {\n        id: '',\n        name: '',\n        state: ''\n      };\n      this.dailyForecast = [{\n        number: '',\n        name: '',\n        detailedForecast: ''\n      }];\n      this.states = [{\n        value: 'AL',\n        viewValue: 'Alabama'\n      }, {\n        value: 'AK',\n        viewValue: 'Alaska'\n      }, {\n        value: 'AZ',\n        viewValue: 'Arizona'\n      }, {\n        value: 'AR',\n        viewValue: 'Arkansas'\n      }, {\n        value: 'CA',\n        viewValue: 'California'\n      }, {\n        value: 'CO',\n        viewValue: 'Colorado'\n      }, {\n        value: 'CT',\n        viewValue: 'Connecticut'\n      }, {\n        value: 'DE',\n        viewValue: 'Delaware'\n      }, {\n        value: 'FL',\n        viewValue: 'Florida'\n      }, {\n        value: 'GA',\n        viewValue: 'Georgia'\n      }, {\n        value: 'HI',\n        viewValue: 'Hawaii'\n      }, {\n        value: 'ID',\n        viewValue: 'Idaho'\n      }, {\n        value: 'IL',\n        viewValue: 'Illinois'\n      }, {\n        value: 'IN',\n        viewValue: 'Indiana'\n      }, {\n        value: 'IA',\n        viewValue: 'Iowa'\n      }, {\n        value: 'KS',\n        viewValue: 'Kansas'\n      }, {\n        value: 'KY',\n        viewValue: 'Kentucky'\n      }, {\n        value: 'LA',\n        viewValue: 'Louisiana'\n      }, {\n        value: 'ME',\n        viewValue: 'Maine'\n      }, {\n        value: 'MD',\n        viewValue: 'Maryland'\n      }, {\n        value: 'MA',\n        viewValue: 'Massachusetts'\n      }, {\n        value: 'MI',\n        viewValue: 'Michigan'\n      }, {\n        value: 'MN',\n        viewValue: 'Minnesota'\n      }, {\n        value: 'MS',\n        viewValue: 'Mississippi'\n      }, {\n        value: 'MO',\n        viewValue: 'Missouri'\n      }, {\n        value: 'MT',\n        viewValue: 'Montana'\n      }, {\n        value: 'NE',\n        viewValue: 'Nebraska'\n      }, {\n        value: 'NV',\n        viewValue: 'Nevada'\n      }, {\n        value: 'NH',\n        viewValue: 'New Hampshire'\n      }, {\n        value: 'NJ',\n        viewValue: 'New Jersey'\n      }, {\n        value: 'NM',\n        viewValue: 'New Mexico'\n      }, {\n        value: 'NY',\n        viewValue: 'New York'\n      }, {\n        value: 'NC',\n        viewValue: 'North Carolina'\n      }, {\n        value: 'ND',\n        viewValue: 'North Dakota'\n      }, {\n        value: 'OH',\n        viewValue: 'Ohio'\n      }, {\n        value: 'OK',\n        viewValue: 'Oklahoma'\n      }, {\n        value: 'OR',\n        viewValue: 'Oregon'\n      }, {\n        value: 'PA',\n        viewValue: 'Pennsylvania'\n      }, {\n        value: 'RI',\n        viewValue: 'Rhode Island'\n      }, {\n        value: 'SC',\n        viewValue: 'South Carolina'\n      }, {\n        value: 'SD',\n        viewValue: 'South Dakota'\n      }, {\n        value: 'TN',\n        viewValue: 'Tennessee'\n      }, {\n        value: 'TX',\n        viewValue: 'Texas'\n      }, {\n        value: 'UT',\n        viewValue: 'Utah'\n      }, {\n        value: 'VT',\n        viewValue: 'Vermont'\n      }, {\n        value: 'VA',\n        viewValue: 'Virginia'\n      }, {\n        value: 'WA',\n        viewValue: 'Washington'\n      }, {\n        value: 'WV',\n        viewValue: 'West Virginia'\n      }, {\n        value: 'WI',\n        viewValue: 'Wisconsin'\n      }, {\n        value: 'WY',\n        viewValue: 'Wyoming'\n      }];\n    }\n    ngOnInit() {\n      this.buttonClicked = false;\n      this.weatherSearchForm = this.fb.group({\n        state: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      this.buttonClicked = true;\n      this.weatherService.getLocationId(this.weatherSearchForm.value.state).pipe(map(res => {\n        this.stateInfo = res.features[0].properties;\n      }), switchMap(() => this.weatherService.getWeatherReport(this.stateInfo.id)), tap(res => this.dailyForecast = res.properties.periods)).subscribe();\n    }\n    static #_ = this.ɵfac = function WeatherComponent_Factory(t) {\n      return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.WeatherService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WeatherComponent,\n      selectors: [[\"app-weather\"]],\n      decls: 17,\n      vars: 4,\n      consts: [[1, \"weather-app-container\"], [1, \"weather-search\"], [3, \"ngSubmit\", \"formGroup\"], [\"formControlName\", \"state\", 1, \"dropDown\"], [\"value\", \"*\", \"disabled\", \"\", \"selected\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"weather-search-button\", 3, \"click\", \"disabled\"], [\"class\", \"forecast-container\", 4, \"ngIf\"], [3, \"ngValue\"], [1, \"forecast-container\"], [\"id\", \"forecast\"], [\"id\", \"state-info\"], [\"id\", \"state-text\"], [\"id\", \"location-text\"], [1, \"daily-forecast\"], [\"id\", \"daily-forecast-info\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"daily-forecast-info\"], [\"id\", \"day-text\"], [\"id\", \"forcast-text\"]],\n      template: function WeatherComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"header\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Weather\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"body\")(4, \"div\", 0)(5, \"div\", 1)(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function WeatherComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"h2\");\n          i0.ɵɵtext(8, \"Please pick a State:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"select\", 3)(10, \"option\", 4);\n          i0.ɵɵtext(11, \"Please select...\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, WeatherComponent_option_12_Template, 2, 2, \"option\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"p\")(14, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_14_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(15, \" Get Weather \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(16, WeatherComponent_div_16_Template, 15, 3, \"div\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.weatherSearchForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.states);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.weatherSearchForm.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.buttonClicked);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"h1[_ngcontent-%COMP%]{display:flex;justify-content:center;font-size:80px;margin:0;padding:15px}select[_ngcontent-%COMP%]{height:40px;border-radius:5px;border:2px solid #8ecae6;padding:5px;background-color:transparent;font-family:Reem Kufi,sans-serif;font-weight:700;font-size:20px;letter-spacing:1px;text-align-last:center}form[_ngcontent-%COMP%]{padding:50px}.weather-search-button[_ngcontent-%COMP%]{box-shadow:0 10px 14px -7px #276873;background:linear-gradient(to bottom,#023047 5%,#408c99);background-color:#023047;border-radius:8px;display:inline-block;cursor:pointer;color:#fff;font-family:Arial;font-size:20px;font-weight:700;padding:13px 32px;text-decoration:none;text-shadow:0px 1px 0px #3d768a}.weather-search-button[_ngcontent-%COMP%]:hover{background:linear-gradient(to bottom,#408c99 5%,#599bb3);background-color:#408c99}.weather-search-button[_ngcontent-%COMP%]:active{position:relative;top:1px}body[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-evenly;height:-moz-fit-content;height:fit-content;background-color:#219ebc}.weather-app-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center}.weather-search[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-evenly}.forecast-container[_ngcontent-%COMP%]{flex-direction:column;display:flex;align-items:baseline}.forecast-container[_ngcontent-%COMP%]   #forecast[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-evenly;padding:5px;overflow:auto}.forecast-container[_ngcontent-%COMP%]   #forecast[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:#219ebc;padding:12px}.forecast-container[_ngcontent-%COMP%]   #forecast[_ngcontent-%COMP%]   #state-info[_ngcontent-%COMP%]{padding:25px}#daily-forecast-info[_ngcontent-%COMP%]{background-color:#ffb703;border:1px solid #fb8500;margin:5px;border-radius:5px}#daily-forecast-info[_ngcontent-%COMP%]{padding:5px}.dropDown[_ngcontent-%COMP%]{width:200px}#state-text[_ngcontent-%COMP%], #location-text[_ngcontent-%COMP%]{font-size:45px;font-weight:700}#day-text[_ngcontent-%COMP%]{color:#fff;font-weight:700;font-size:20px;letter-spacing:2.5px}#forcast-text[_ngcontent-%COMP%]{color:#fff;font-size:18px}@media only screen and (max-width: 600px){h1[_ngcontent-%COMP%]{font-size:30px}form[_ngcontent-%COMP%]{padding:0 0 0 5px}body[_ngcontent-%COMP%]{display:flex;background-color:#219ebc}body[_ngcontent-%COMP%]   .weather-search[_ngcontent-%COMP%]{display:inline}body[_ngcontent-%COMP%]   .forecast-container[_ngcontent-%COMP%]   #forecast[_ngcontent-%COMP%]{padding:5px;overflow:auto}}\"]\n    });\n  }\n  return WeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}